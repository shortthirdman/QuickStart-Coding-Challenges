# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Release

on:
  push:
   branches: [main]
   tags:
    - 'v*.*.*'
  workflow_dispatch:

jobs:
  maven-build:
    name: Java CI with Maven
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      statuses: write # To report GitHub Actions status checks
      actions: read # Needed for detection of GitHub Actions environment.
      id-token: write # Needed for provenance signing and ID.
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'
          cache: maven

      - name: Build, Package and Test
        run: mvn jacoco:prepare-agent clean test package surefire-report:report jacoco:report
        
      - name: Submit Dependency Snapshot
        uses: advanced-security/maven-dependency-submission-action@v4

      - name: Create staging artifacts
        run: |
          mkdir staging && mv target/*.jar staging
          echo "Create JaCoCo Report archive"
          zip -r jacoco-reports.zip target/site/jacoco && mv jacoco-reports.zip staging
          echo "Create SureFire HTML Report archive"
          zip -r surefire-reports.zip target/reports && mv surefire-reports.zip staging

      # - name: Create GitHub Release
      #   id: create-release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: v${{ github.ref }}
      #     release_name: Release v${{ github.ref }}
      #     name: Release ${{ github.ref }}
      #     body: This is a release for ${{ github.ref }}
      #     draft: false
      #     prerelease: false

      # - name: Upload staging artifacts
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1.0.2
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create-release.outputs.upload_url }}
      #     asset_path: staging
      #     asset_name: *.{jar,zip}

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            staging/*.jar
            staging/*.zip
          make_latest: "true"
          generate_release_notes: true